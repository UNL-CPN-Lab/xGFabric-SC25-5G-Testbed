# use docker network create --subnet=10.53.1.0/24 docker_ran
# to create the network first
# "Config": [
#     {
#         "Subnet": "10.53.1.0/24",
#         "Gateway": "10.53.1.1"
#     }

#can auto-create the network
# networks:
#   ran:
#     ipam:
#       driver: default
#       config:
#         - subnet: 10.53.1.0/24

networks:
  docker_ran:
    external: true

services:
  5gc:
    image: open5gs-docker
    build:
      context: ./docker/open5gs/
      args:
        OS_VERSION: "24.04"
        OPEN5GS_VERSION: "v2.7.0"
    env_file:
      - ${OPEN_5GS_ENV_FILE:-configs/open5gs.env}
    privileged: true
    volumes:
      - ./configs/open5gs-5gc.yml.in:/open5gs/open5gs-5gc.yml.in
      - ./configs/subscriber_db.csv:/open5gs/subscriber_db.csv
    ports:
      - "9999:9999/tcp"
      - "38412:38412/sctp"
      - "2152:2152/udp"
    command: ["5gc", "-c", "open5gs-5gc.yml"]
    networks:
      docker_ran:
        ipv4_address: ${OPEN5GS_IP:-10.53.1.2}

  srs5ggNB:
    # image: its-registry.unl.edu/nextt/runtime/srsran-4g/amd64/uhd_master:main-df286439
    # image: pavonis/srs-gnb-dev
    image: 5g_gnb
    privileged: true
    depends_on:
      - 5gc
    volumes:
      # - /dev/bus/usb:/dev/bus/usb
      - /dev/bus/usb/001/008:/dev/bus/usb/001/008
      - /lib/modules:/lib/modules
      - /etc/network:/etc/network:rw
      - ./configs:/home/ubuntu
      # - ./pcap:/tmp
    tty: true
    networks:
      docker_ran:
        ipv4_address: 10.53.1.3
    user: root
    command: >
      bash -c "
        bash /home/ubuntu/gNB_script.sh &&
        sudo gnb -c /home/ubuntu/gnb_rf_b210_fdd_srsUE.yml &&
        bash"
    # command: >
    #   bash -c "
    #     bash /home/ubuntu/gNB_script.sh &&
    #     gnb -c /home/ubuntu/gnb_rf_b200_tdd_n78_20mhz.yml &&
    #     bash"